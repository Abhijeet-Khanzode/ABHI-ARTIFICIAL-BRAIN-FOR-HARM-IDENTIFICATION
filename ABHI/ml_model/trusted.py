import pandas as pd
import random

# List of trusted domains that often have slugs/paths
trusted_domains = [
    "google.com", "gmail.com", "youtube.com", "facebook.com", "instagram.com",
    "linkedin.com", "whatsapp.com", "amazon.com", "twitter.com", "apple.com",
    "microsoft.com", "bing.com", "chatgpt.com", "openai.com", "github.com",
    "stackoverflow.com", "medium.com", "wikipedia.org", "dropbox.com", "paypal.com",
    "zoom.us", "adobe.com", "cloudflare.com", "canva.com", "flipkart.com",
    "snapchat.com", "reddit.com", "quora.com", "netflix.com", "hulu.com",
    "spotify.com", "tiktok.com", "booking.com", "expedia.com", "airbnb.com",
    "coursera.org", "udemy.com", "khanacademy.org", "edx.org", "zomato.com",
    "swiggy.com", "ola.com", "uber.com", "nytimes.com", "bbc.com",
    "theguardian.com", "forbes.com", "bloomberg.com", "cnn.com", "wsj.com",
    "economist.com", "reuters.com", "yahoo.com", "intuit.com", "oracle.com",
    "vmware.com", "nvidia.com", "intel.com", "dell.com", "hp.com",
    "samsung.com", "oneplus.com", "motorola.com", "xiaomi.com", "realme.com",
    "asus.com", "lenovo.com", "acer.com", "spotify.com", "soundcloud.com",
    "dribbble.com", "behance.net", "figma.com", "notion.so", "slack.com",
    "discord.com", "trello.com", "asana.com", "jira.com", "zoho.com",
    "godaddy.com", "namecheap.com", "digitalocean.com", "aws.amazon.com", "azure.microsoft.com",
    "firebase.google.com", "vercel.com", "netlify.app", "heroku.com", "cloud.google.com",
    "mailchimp.com", "sendgrid.com", "wordpress.com", "wix.com", "shopify.com",
    "bigcommerce.com", "stripe.com", "razorpay.com", "instamojo.com", "coinbase.com",
    "binance.com", "coindesk.com", "blockchain.com", "indiegogo.com", "kickstarter.com",
    "udacity.com", "pluralsight.com", "geeksforgeeks.org", "javatpoint.com", "w3schools.com",
    "programiz.com", "hackerrank.com", "leetcode.com", "codeforces.com", "codechef.com",
    "topcoder.com", "atcoder.jp", "projecteuler.net", "codingninjas.com", "scaler.com",
    "masai.school", "prepinsta.com", "glassdoor.com", "naukri.com", "indeed.com",
    "monster.com", "timesjobs.com", "workindia.in", "freelancer.com", "upwork.com",
    "fiverr.com", "toptal.com", "angel.co", "crunchbase.com", "producthunt.com",
    "unsplash.com", "pexels.com", "pixabay.com", "shutterstock.com", "gettyimages.com",
    "mail.google.com", "drive.google.com", "docs.google.com", "photos.google.com", "translate.google.com",
    "calendar.google.com", "news.google.com", "maps.google.com", "play.google.com", "contacts.google.com",
    "keep.google.com", "meet.google.com", "workspace.google.com", "business.facebook.com", "messenger.com",
    "fb.com", "instagram.com", "linkedin.com", "x.com", "twitter.com",
    "threads.net", "github.dev", "codesandbox.io", "replit.com", "codepen.io",
    "jsfiddle.net", "jsonlint.com", "regex101.com", "stackexchange.com", "mathworks.com",
    "matlab.com", "wolframalpha.com", "overleaf.com", "sciencedirect.com", "researchgate.net",
    "arxiv.org", "springer.com", "ieee.org", "acm.org", "nature.com",
    "cambridge.org", "oxfordlearnersdictionaries.com", "grammarly.com", "deepl.com", "duolingo.com",
    "courier.com", "turing.com", "remotive.io", "remoteok.com", "weworkremotely.com",
    "simplyhired.com", "livescore.com", "espncricinfo.com", "espn.com", "nba.com",
    "icc-cricket.com", "fifa.com", "uefa.com", "hotstar.com", "sonyliv.com",
    "jio.com", "airtel.in", "vi.in", "bsnl.co.in", "irctc.co.in",
    "indianrail.gov.in", "epfindia.gov.in", "uidai.gov.in", "mygov.in", "incometax.gov.in",
    "gst.gov.in", "digilocker.gov.in", "nsp.gov.in", "passportindia.gov.in", "cowin.gov.in",
    "acer.com",
    "acm.org",
    "adobe.com",
    "airbnb.com",
    "airtel.in",
    "amazon.com",
    "angel.co",
    "apple.com",
    "arxiv.org",
    "asana.com",
    "asus.com",
    "atcoder.jp",
    "aws.amazon.com",
    "azure.microsoft.com",
    "bbc.com",
    "behance.net",
    "bigcommerce.com",
    "binance.com",
    "bing.com",
    "blockchain.com",
    "booking.com",
    "bsnl.co.in",
    "cambridge.org",
    "canva.com",
    "chatgpt.com",
    "cloud.google.com",
    "cnn.com",
    "codechef.com",
    "codeforces.com",
    "codingninjas.com",
    "coinbase.com",
    "coindesk.com",
    "courier.com",
    "coursera.org",
    "cowin.gov.in",
    "crunchbase.com",
    "deepl.com",
    "dell.com",
    "digilocker.gov.in",
    "digitalocean.com",
    "discord.com",
    "dribbble.com",
    "dropbox.com",
    "duolingo.com",
    "economist.com",
    "edx.org",
    "epfindia.gov.in",
    "espn.com",
    "espncricinfo.com",
    "facebook.com",
    "fifa.com",
    "figma.com",
    "firebase.google.com",
    "fiverr.com",
    "flipkart.com",
    "forbes.com",
    "freelancer.com",
    "geeksforgeeks.org",
    "gettyimages.com",
    "github.com",
    "glassdoor.com",
    "gmail.com",
    "godaddy.com",
    "google.com",
    "grammarly.com",
    "gst.gov.in",
    "hackerrank.com",
    "heroku.com",
    "hotstar.com",
    "hp.com",
    "hulu.com",
    "icc-cricket.com",
    "ieee.org",
    "incometax.gov.in",
    "indeed.com",
    "indianrail.gov.in",
    "indiegogo.com",
    "instagram.com",
    "instamojo.com",
    "intel.com",
    "intuit.com",
    "irctc.co.in",
    "joinsuperset.com",
    "javatpoint.com",
    "jio.com",
    "jira.com",
    "khanacademy.org",
    "kickstarter.com",
    "leetcode.com",
    "lenovo.com",
    "linkedin.com",
    "livescore.com",
    "mailchimp.com",
    "masai.school",
    "mathworks.com",
    "microsoft.com",
    "monster.com",
    "motorola.com",
    "mygov.in",
    "namecheap.com",
    "nature.com",
    "naukri.com",
    "nba.com",
    "netflix.com",
    "netlify.app",
    "notion.so",
    "nsp.gov.in",
    "nvidia.com",
    "nytimes.com",
    "ola.com",
    "oneplus.com",
    "openai.com",
    "oracle.com",
    "overleaf.com",
    "oxfordlearnersdictionaries.com",
    "onlinesbi.com",
    "passportindia.gov.in",
    "paypal.com",
    "pexels.com",
    "pixabay.com",
    "pluralsight.com",
    "prepinsta.com",
    "producthunt.com",
    "programiz.com",
    "projecteuler.net",
    "quora.com",
    "razorpay.com",
    "realme.com",
    "remoteok.com",
    "remotive.io",
    "researchgate.net",
    "reuters.com",
    "samsung.com",
    "scaler.com",
    "sciencedirect.com",
    "sendgrid.com",
    "shopify.com",
    "shutterstock.com",
    "simplyhired.com",
    "slack.com",
    "snapchat.com",
    "sonyliv.com",
    "soundcloud.com",
    "spotify.com",
    "springer.com",
    "stackoverflow.com",
    "stripe.com",
    "swiggy.com",
    "theguardian.com",
    "tiktok.com",
    "timesjobs.com",
    "topcoder.com",
    "toptal.com",
    "trello.com",
    "turing.com",
    "twitter.com",
    "uber.com",
    "udacity.com",
    "udemy.com",
    "uefa.com",
    "uidai.gov.in",
    "unsplash.com",
    "upwork.com",
    "vercel.com",
    "vi.in",
    "vmware.com",
    "w3schools.com",
    "weworkremotely.com",
    "wikipedia.org",
    "wix.com",
    "wolframalpha.com",
    "wordpress.com",
    "workindia.in",
    "wsj.com",
    "xiaomi.com",
    "yahoo.com",
    "youtube.com",
    "zoho.com",
    "zomato.com",
    "zoom.us"


]

# Templates for URL paths with placeholders for random IDs or slugs
url_templates = [
    "/c/{id}", "/in/{slug}", "/watch?v={id}", "/user/{slug}",
    "/research/{slug}", "/docs/{slug}/edit", "/s/{slug}", "/issues/{num}",
    "/r/{slug}", "/questions/{num}", "/profile/{slug}", "/posts/{slug}"
]

# Helper functions
def random_id(n=16):
    chars = 'abcdefghijklmnopqrstuvwxyz0123456789'
    return ''.join(random.choice(chars) for _ in range(n))

def random_slug():
    return '-'.join(random.choice(['hello', 'world', 'test', 'example', 'data', 'update', 'a', 'b', 'c','login', 'd', 'home', 'login', 'logout', 'signin', 'signup', 'register', 'auth',
    'dashboard', 'account', 'settings', 'profile', 'about', 'contact',
    'support', 'help', 'docs', 'documentation', 'guide', 'faq',
    'update', 'download', 'uploads', 'files', 'data', 'images',
    'media', 'photo', 'video', 'search', 'explore', 'community',
    'projects', 'repos', 'repository', 'issues', 'pulls', 'commits',
    'branches', 'main', 'src', 'code', 'test', 'tests', 'examples',
    'sample', 'public', 'private', 'admin', 'tools', 'settings',
    'notifications', 'messages', 'chats', 'inbox', 'archive', 'terms',
    'privacy', 'security', 'status', 'news', 'blog', 'api', 'v1',
    'v2', 'resources', 'pricing', 'plans', 'shop', 'store', 'cart',
    'checkout', 'billing', 'subscribe', 'unsubscribe', 'uploads',
    'events', 'calendar', 'notes', 'tasks', 'reports', 'analytics',
    'stats', 'dev', 'developer', 'team', 'organization', 'school',
    'edu', 'learn', 'course', 'class', 'training', 'demo',
    'index', 'main', 'default', 'root', 'docs', 'readme',
    'hello', 'world', 'a', 'b', 'c', 'd', 'x', 'y', 'z']) for _ in range(3))

# Generate combinations
safe_urls = []
while len(safe_urls) < 500000:
    domain = random.choice(trusted_domains)
    template = random.choice(url_templates)
    if "{id}" in template:
        path = template.format(id=random_id())
    elif "{num}" in template:
        path = template.format(num=random.randint(1,999999))
    else:
        path = template.format(slug=random_slug())
    url = f"https://www.{domain}{path}"
    safe_urls.append(url)

# Deduplicate
safe_urls = list(set(safe_urls))[:500000]

# Create DataFrame
safe_slugs = pd.DataFrame({"url": safe_urls, "label": 0})
safe_slugs.to_csv("safe_slug_50000.csv", index=False)

print("âœ… Generated 50000 safe slug URLs in safe_slug_50000.csv")
